1. OVERLAPPING PEAK WINDOW METHOD RESULTS

Preprocessing :
- Drop resultant columns (not used in this method)
- Group data in 0.5 second windows by 'subject','trial_type','trial_subtype','trial_num','trial_num_original'
and calculate variance and mean of each column (all metrics,body parts and axis)
- Pick a body part (most likely waist) to find the peak around. Calculate the absolute (positive or negative)
peak acceleration of each axis (X,Y,Z)
- Grab the window from the minimum peak+2secs to the maximum peak+2secs of the axis
(if peakX > peakZ > peakY, then the window goes from peakY-2secs - peakX+2secs)
- Do this for every trial (basically grab the "important" part of every trial) 
- Mark the overlapping windows of Fall trials as 1s, rest as 0s.


All of the following tests were done with this model :
svm.SVC(decision_function_shape='ovo', cache_size=500000, coef0=0, C=1, gamma=0.01,  class_weight=None)
Changing the model doesn't seem to produce better results

1.1. Using only waist acceleration mean and variances :
Confusion matrix : 
TN : 3276 FP : 127
FN : 991 TP : 743

Accuracy : 0.782363247031
Recall : 0.428489042676
Precision : 0.854022988506
F-measure :0.570660522273
Sensitivity : 42.8489042676
Specificity : 96.2679988246

1.2. Using only waist acceleration mean columns :
Confusion matrix : 
TN : 3343 FP : 60
FN : 1081 TP : 653

Accuracy : 0.777885925638
Recall : 0.376585928489
Precision : 0.915848527349
F-measure :0.533714752758
Sensitivity : 37.6585928489
Specificity : 98.2368498384

(From now on all trials will use both mean and variance) 

1.3. Using waist, sternum and head accelerations 
Confusion matrix : 
TN : 3165 FP : 238
FN : 986 TP : 748

Accuracy : 0.76172863539
Recall : 0.43137254902
Precision : 0.758620689655
F-measure :0.55
Sensitivity : 43.137254902
Specificity : 93.0061710256

1.4. Using waist, sternum and head accelerations and velocity : 
Confusion matrix : 
TN : 3156 FP : 247
FN : 983 TP : 751

Accuracy : 0.760560638505
Recall : 0.433102652826
Precision : 0.75250501002
F-measure :0.549780380673
Sensitivity : 43.3102652826
Specificity : 92.7416985013

1.5. Using head and both thighs accelerations (the parts with more correlation with the target) :
(THIS TIME WITH HEAD PEAK INSTEAD OF WAIST)
Confusion matrix : 
TN : 2972 FP : 208
FN : 1166 TP : 555

Accuracy : 0.719649051214
Recall : 0.322486926206
Precision : 0.727391874181
F-measure :0.446859903382
Sensitivity : 32.2486926206
Specificity : 93.4591194969

1.6. All metrics, all body parts (back to peak with waist) : (predicts everything as 0s)
Confusion matrix : 
TN : 3403 FP : 0
FN : 1734 TP : 0

Accuracy : 0.662448900136
Recall : 0.0
Precision : 0.0
F-measure :0.0
Sensitivity : 0.0
Specificity : 100.0

1.7. Acceleration for all body parts : 
Confusion matrix : 
TN : 3245 FP : 158
FN : 1323 TP : 411

Accuracy : 0.711699435468
Recall : 0.237024221453
Precision : 0.722319859402
F-measure :0.356925749023
Sensitivity : 23.7024221453
Specificity : 95.3570379077

1.8. Accelerations for all parts except ankles
Confusion matrix : 
TN : 3201 FP : 202
FN : 1212 TP : 522

Accuracy : 0.724742067354
Recall : 0.301038062284
Precision : 0.720994475138
F-measure :0.424735557364
Sensitivity : 30.1038062284
Specificity : 94.0640611225

NOTES : 
-Variance helps
-Ankle sensors are the least useful
-Magnetic field is useless
-Changing the hyperparameters of the model doesn't seem to improve it
-Not very good accuracy in general
-Fast preprocessing time
-Ignores the edges of the data outside of the overlapping window

-------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------

2. RESULTANT PEAK WINDOW METHOD RESULTS

Preprocessing :
- DON'T drop resultant column this time
- Group data in 0.5 second windows by 'subject','trial_type','trial_subtype','trial_num','trial_num_original'
and calculate variance and mean of each column (all metrics,body parts and axis) (including resultants)
- Pick a body part (most likely waist) to find the peak around.
- Find the highest resultant_acceleration_mean for the body part picked (this is the peak). In fall
trials, consider the peak and 2 seconds before and after it as 'fall' and the rest as not falls
- In non-fall trials all observations are non-falls

2.1. For this experiment we're using only fall trials and using waist acceleration only
(NO near-fall or ADL trials were used to train/test) to make the data a bit more balanced

Confusion matrix : 
TN : 2333 FP : 78
FN : 342 TP : 498

Accuracy : 0.870808981852
Recall : 0.592857142857
Precision : 0.864583333333
F-measure :0.703389830508
Sensitivity : 59.2857142857
Specificity : 96.7648278723

2.2. Same experiment as before but with ADL,near-fall and fall trials :
(The data is very imbalanced and this has an effect in predictions, but we can't just
ignore ADLs and near-falls)

Confusion matrix : 
TN : 8627 FP : 114
FN : 509 TP : 331

Accuracy : 0.934975472289
Recall : 0.394047619048
Precision : 0.743820224719
F-measure :0.515175097276
Sensitivity : 39.4047619048
Specificity : 98.6958013957

2.3. Waist, sternum and head accelerations : 
Confusion matrix : 
TN : 8553 FP : 188
FN : 495 TP : 345

Accuracy : 0.928713077967
Recall : 0.410714285714
Precision : 0.647279549719
F-measure :0.502549162418
Sensitivity : 41.0714285714
Specificity : 97.8492163368

2.4. Waist and thighs accelerations : 
Confusion matrix : 
TN : 8734 FP : 7
FN : 818 TP : 22

Accuracy : 0.913892078071
Recall : 0.0261904761905
Precision : 0.758620689655
F-measure :0.0506329113924
Sensitivity : 2.61904761905
Specificity : 99.9199176296

2.5. Waist acceleration,velocity and magnetic field :
Confusion matrix : 
TN : 8738 FP : 3
FN : 835 TP : 5

Accuracy : 0.912535225968
Recall : 0.00595238095238
Precision : 0.625
F-measure :0.0117924528302
Sensitivity : 0.595238095238
Specificity : 99.9656789841

2.6. Waist velocity (Peak around resultant velocity) :
Confusion matrix : 
TN : 8721 FP : 20
FN : 707 TP : 133

Accuracy : 0.924120655464
Recall : 0.158333333333
Precision : 0.869281045752
F-measure :0.267875125881
Sensitivity : 15.8333333333
Specificity : 99.7711932273

2.7. Sternum and head accelerations (peak around sternum resultant acceleration) :
Confusion matrix : 
TN : 8585 FP : 156
FN : 508 TP : 332

Accuracy : 0.930696169502
Recall : 0.395238095238
Precision : 0.680327868852
F-measure :0.5
Sensitivity : 39.5238095238
Specificity : 98.2153071731

2.8. Head and thighs accelerations (peak around head resultant acceleration) :
Confusion matrix : 
TN : 8718 FP : 23
FN : 798 TP : 42

Accuracy : 0.914309571026
Recall : 0.05
Precision : 0.646153846154
F-measure :0.092817679558
Sensitivity : 5.0
Specificity : 99.7368722114

NOTES : 
- Fast preprocessing
- Waist seems to be pretty much mandatory to ue
- Multiple of these tests cause the number of TP to go down really low <50

-------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------

3. RESULTANT DIFFERENCE WINDOW METHOD RESULTS : 

Preprocessing : 
- DON'T drop resultant column this time
- Group data in 1.0 second windows by 'subject','trial_type','trial_subtype','trial_num','trial_num_original'
and calculate variance and mean of each column (all metrics,body parts and axis) (including resultants)
This method uses 1.0 second windows due to the calculation of the difference between resultant causing the
kernels to freeze and restart. 1.0 second windows initially reduces the amount of differences to calculate
- Pick a metric and body part to create the window around (usually waist acceleration )
- Calculate the differences between every 2 observations of the waist acceleration mean column
Basically we want to find the point where the acceleration mean changes the most and create a window
around this peak
- Find the peak difference and a window of 2 secs before and after it as "falls" rest as "nonfalls"

(All these tests use the resultant and resultantdiff columns)
3.1. Waist accelerations only : 
Confusion matrix : 
TN : 4455 FP : 65
FN : 210 TP : 210

Accuracy : 0.944331983806
Recall : 0.5
Precision : 0.763636363636
F-measure :0.604316546763
Sensitivity : 50.0
Specificity : 98.5619469027

3.2. Sternum acceleration : 
Confusion matrix : 
TN : 4484 FP : 36
FN : 209 TP : 211

Accuracy : 0.9504048583
Recall : 0.502380952381
Precision : 0.854251012146
F-measure :0.632683658171
Sensitivity : 50.2380952381
Specificity : 99.203539823

3.3. Head acceleration : 
Confusion matrix : 
TN : 4470 FP : 51
FN : 219 TP : 200

Accuracy : 0.945344129555
Recall : 0.477326968974
Precision : 0.796812749004
F-measure :0.597014925373
Sensitivity : 47.7326968974
Specificity : 98.8719309887








-------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------

4. CONVOLUTIONAL NEURAL NETWORK RESULTS

Preprocessing : 
In this case the windowing process doesn't use the means or variances. It uses the data "raw" along with
the resultant of each row, finds the peak resultant and considers a "fall" everything within 250 rows (above and
below the peak) as a fall. (250 * 0.00782 ~ 2 seconds above and below the peak)

All these are using these columns : 
'waist Acceleration Y (m/s^2)'
'waist Acceleration Z (m/s^2)' 
'waist Acceleration X (m/s^2)'
'waist resultant acceleration'


The only extra preprocessing steps done before training and predicting are changing
the dimensions of the data :

4.1. CNN using input shape (1,4) (the vectors by themselves), kernel size 1, 8 filters and maxpooling 1. 
(Basically the maxpooling and flatten layers don't do anything here). Results for 20 epochs : 

Confusion matrix : 
TN : 539650 FP : 2865
FN : 47812 TP : 4540

Accuracy : 0.9148095288526679
Sensitivity : 8.672066014669927
Specificity : 99.47190400265431
Precision : 0.613099257258609
Recall : 0.08672066014669927

Results for 200 Epochs : (slightly better)
Confusion matrix : 
TN : 540599 FP : 1916
FN : 46830 TP : 5522

Accuracy : 0.9180556326035904
Sensitivity : 10.547830073349633
Specificity : 99.64683004156566
Precision : 0.7424038720086045
Recall : 0.10547830073349633

4.2. CNN using input of "images" of size 250x4 always causes the CNN to produce output 0 and
give around 90% accuracy.

4.3. So far every other case has done the same where it keeps guessing everything is a 0 and ends
with around 90% accuracy due to the fact that there aren't many cases of 1s.