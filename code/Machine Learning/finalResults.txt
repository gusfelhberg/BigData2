1. OVERLAPPING PEAK WINDOW METHOD RESULTS

Preprocessing :
- Drop resultant columns (not used in this method)
- Group data in 0.5 second windows by 'subject','trial_type','trial_subtype','trial_num','trial_num_original'
and calculate variance and mean of each column (all metrics,body parts and axis)
- Pick a body part (most likely waist) to find the peak around. Calculate the absolute (positive or negative)
peak acceleration of each axis (X,Y,Z)
- Grab the window from the minimum peak+2secs to the maximum peak+2secs of the axis
(if peakX > peakZ > peakY, then the window goes from peakY-2secs - peakX+2secs)
- Do this for every trial (basically grab the "important" part of every trial) 
- Mark the overlapping windows of Fall trials as 1s, rest as 0s.


All of the following tests were done with this model :
svm.SVC(decision_function_shape='ovo', cache_size=500000, coef0=0, C=1, gamma=0.01,  class_weight=None)
Changing the model doesn't seem to produce better results

1.1. Using only waist acceleration mean and variances :
Confusion matrix : 
TN : 3276 FP : 127
FN : 991 TP : 743

Accuracy : 0.782363247031
Recall : 0.428489042676
Precision : 0.854022988506
F-measure :0.570660522273
Sensitivity : 42.8489042676
Specificity : 96.2679988246

1.2. Using only waist acceleration mean columns :
Confusion matrix : 
TN : 3343 FP : 60
FN : 1081 TP : 653

Accuracy : 0.777885925638
Recall : 0.376585928489
Precision : 0.915848527349
F-measure :0.533714752758
Sensitivity : 37.6585928489
Specificity : 98.2368498384

(From now on all trials will use both mean and variance) 

1.3. Using waist, sternum and head accelerations 
Confusion matrix : 
TN : 3165 FP : 238
FN : 986 TP : 748

Accuracy : 0.76172863539
Recall : 0.43137254902
Precision : 0.758620689655
F-measure :0.55
Sensitivity : 43.137254902
Specificity : 93.0061710256

1.4. Using waist, sternum and head accelerations and velocity : 
Confusion matrix : 
TN : 3156 FP : 247
FN : 983 TP : 751

Accuracy : 0.760560638505
Recall : 0.433102652826
Precision : 0.75250501002
F-measure :0.549780380673
Sensitivity : 43.3102652826
Specificity : 92.7416985013

1.5. Using head and both thighs accelerations (the parts with more correlation with the target) :
(THIS TIME WITH HEAD PEAK INSTEAD OF WAIST)
Confusion matrix : 
TN : 2972 FP : 208
FN : 1166 TP : 555

Accuracy : 0.719649051214
Recall : 0.322486926206
Precision : 0.727391874181
F-measure :0.446859903382
Sensitivity : 32.2486926206
Specificity : 93.4591194969

1.6. All metrics, all body parts (back to peak with waist) : (predicts everything as 0s)
Confusion matrix : 
TN : 3403 FP : 0
FN : 1734 TP : 0

Accuracy : 0.662448900136
Recall : 0.0
Precision : 0.0
F-measure :0.0
Sensitivity : 0.0
Specificity : 100.0

1.7. Acceleration for all body parts : 
Confusion matrix : 
TN : 3245 FP : 158
FN : 1323 TP : 411

Accuracy : 0.711699435468
Recall : 0.237024221453
Precision : 0.722319859402
F-measure :0.356925749023
Sensitivity : 23.7024221453
Specificity : 95.3570379077

1.8. Accelerations for all parts except ankles
Confusion matrix : 
TN : 3201 FP : 202
FN : 1212 TP : 522

Accuracy : 0.724742067354
Recall : 0.301038062284
Precision : 0.720994475138
F-measure :0.424735557364
Sensitivity : 30.1038062284
Specificity : 94.0640611225

NOTES : 
-Variance helps
-Ankle sensors are the least useful
-Magnetic field is useless
-Changing the hyperparameters of the model doesn't seem to improve it
-Not very good accuracy in general
-Fast preprocessing time
-Ignores the edges of the data outside of the overlapping window

-------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------

2. RESULTANT PEAK WINDOW METHOD RESULTS

Preprocessing :
- DON'T drop resultant column this time
- Group data in 0.5 second windows by 'subject','trial_type','trial_subtype','trial_num','trial_num_original'
and calculate variance and mean of each column (all metrics,body parts and axis) (including resultants)
- Pick a body part (most likely waist) to find the peak around.
- Find the highest resultant_acceleration_mean for the body part picked (this is the peak). In fall
trials, consider the peak and 2 seconds before and after it as 'fall' and the rest as not falls
- In non-fall trials all observations are non-falls

2.1. For this experiment we're using only fall trials and using waist acceleration only
(NO near-fall or ADL trials were used to train/test) to make the data a bit more balanced

Confusion matrix : 
TN : 2333 FP : 78
FN : 342 TP : 498

Accuracy : 0.870808981852
Recall : 0.592857142857
Precision : 0.864583333333
F-measure :0.703389830508
Sensitivity : 59.2857142857
Specificity : 96.7648278723

2.2. Same experiment as before but with ADL,near-fall and fall trials :
(The data is very imbalanced and this has an effect in predictions, but we can't just
ignore ADLs and near-falls)

Confusion matrix : 
TN : 8627 FP : 114
FN : 509 TP : 331

Accuracy : 0.934975472289
Recall : 0.394047619048
Precision : 0.743820224719
F-measure :0.515175097276
Sensitivity : 39.4047619048
Specificity : 98.6958013957

2.3. Waist, sternum and head accelerations : 
Confusion matrix : 
TN : 8553 FP : 188
FN : 495 TP : 345

Accuracy : 0.928713077967
Recall : 0.410714285714
Precision : 0.647279549719
F-measure :0.502549162418
Sensitivity : 41.0714285714
Specificity : 97.8492163368

2.4. Waist and thighs accelerations : 
Confusion matrix : 
TN : 8734 FP : 7
FN : 818 TP : 22

Accuracy : 0.913892078071
Recall : 0.0261904761905
Precision : 0.758620689655
F-measure :0.0506329113924
Sensitivity : 2.61904761905
Specificity : 99.9199176296

2.5. Waist acceleration,velocity and magnetic field :
Confusion matrix : 
TN : 8738 FP : 3
FN : 835 TP : 5

Accuracy : 0.912535225968
Recall : 0.00595238095238
Precision : 0.625
F-measure :0.0117924528302
Sensitivity : 0.595238095238
Specificity : 99.9656789841

2.6. Waist velocity (Peak around resultant velocity) :
Confusion matrix : 
TN : 8721 FP : 20
FN : 707 TP : 133

Accuracy : 0.924120655464
Recall : 0.158333333333
Precision : 0.869281045752
F-measure :0.267875125881
Sensitivity : 15.8333333333
Specificity : 99.7711932273

2.7. Sternum and head accelerations (peak around sternum resultant acceleration) :
Confusion matrix : 
TN : 8585 FP : 156
FN : 508 TP : 332

Accuracy : 0.930696169502
Recall : 0.395238095238
Precision : 0.680327868852
F-measure :0.5
Sensitivity : 39.5238095238
Specificity : 98.2153071731

2.8. Head and thighs accelerations (peak around head resultant acceleration) :
Confusion matrix : 
TN : 8718 FP : 23
FN : 798 TP : 42

Accuracy : 0.914309571026
Recall : 0.05
Precision : 0.646153846154
F-measure :0.092817679558
Sensitivity : 5.0
Specificity : 99.7368722114

NOTES : 
- Fast preprocessing
- Waist seems to be pretty much mandatory to ue
- Multiple of these tests cause the number of TP to go down really low <50

-------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------

3. RESULTANT DIFFERENCE WINDOW METHOD RESULTS : 

Preprocessing : 
- DON'T drop resultant column this time
- Group data in 1.0 second windows by 'subject','trial_type','trial_subtype','trial_num','trial_num_original'
and calculate variance and mean of each column (all metrics,body parts and axis) (including resultants)
This method uses 1.0 second windows due to the calculation of the difference between resultant causing the
kernels to freeze and restart. 1.0 second windows initially reduces the amount of differences to calculate
- Pick a metric and body part to create the window around (usually waist acceleration )
- Calculate the differences between every 2 observations of the waist acceleration mean column
Basically we want to find the point where the acceleration mean changes the most and create a window
around this peak
- Find the peak difference and a window of 2 secs before and after it as "falls" rest as "nonfalls"

(All these tests use the resultant and resultantdiff columns)
3.1. Waist accelerations only : 
Confusion matrix : 
TN : 4455 FP : 65
FN : 210 TP : 210

Accuracy : 0.944331983806
Recall : 0.5
Precision : 0.763636363636
F-measure :0.604316546763
Sensitivity : 50.0
Specificity : 98.5619469027

3.2. Sternum acceleration : 
Confusion matrix : 
TN : 4484 FP : 36
FN : 209 TP : 211

Accuracy : 0.9504048583
Recall : 0.502380952381
Precision : 0.854251012146
F-measure :0.632683658171
Sensitivity : 50.2380952381
Specificity : 99.203539823

3.3. Head acceleration : 
Confusion matrix : 
TN : 4470 FP : 51
FN : 219 TP : 200

Accuracy : 0.945344129555
Recall : 0.477326968974
Precision : 0.796812749004
F-measure :0.597014925373
Sensitivity : 47.7326968974
Specificity : 98.8719309887








-------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------

4. CONVOLUTIONAL NEURAL NETWORK RESULTS

Preprocessing : 
In this case the windowing process doesn't use the means or variances. It uses the data "raw" along with
the resultant of each row, finds the peak resultant and considers a "fall" everything within 250 rows (above and
below the peak) as a fall. (250 * 0.00782 ~ 2 seconds above and below the peak)

THESE RESULTS ONLY USE FALL TRIALS : 

All these are using these columns : (just to find the best set of results) :
'waist Acceleration Y (m/s^2)'
'waist Acceleration Z (m/s^2)' 
'waist Acceleration X (m/s^2)'
'waist resultant acceleration'


The only extra preprocessing steps done before training and predicting are changing
the dimensions of the data :

4.1. 
conv = Sequential()
conv.add(Conv1D(filters=40, kernel_size=2, input_shape = (4,1), activation = 'relu'))
conv.add(MaxPooling1D(2))
conv.add(Flatten())
conv.add(Dense(1, activation = 'sigmoid'))
sgd = SGD(lr = 0.01, momentum = 0.9, decay = 0, nesterov = False)
conv.compile(loss = 'binary_crossentropy', optimizer = sgd, metrics = ['accuracy'])
conv.fit(X_train_final, y_train, batch_size = 500, epochs = 50, verbose = 0)

(this is how the input looks  : )
[[ 9.7707056]
 [ 2.456483 ]
 [-9.424129 ]
 [-0.786239 ]]

Model info : 
Input shape:  (201699, 4, 1)
Conv1D Layer : 
Input : Tensor("conv1d_2_input:0", shape=(?, 4, 1), dtype=float32)
Output : Tensor("conv1d_2/Relu:0", shape=(?, 3, 40), dtype=float32)
MaxPooling1D Layer : 
Output : Tensor("max_pooling1d_2/Squeeze:0", shape=(?, 1, 40), dtype=float32)
Flatten Layer : 
Output : Tensor("flatten_4/Reshape:0", shape=(?, ?), dtype=float32)
Dense Output Layer :
Output : Tensor("dense_4/Sigmoid:0", shape=(?, 1), dtype=float32)

Confusion matrix : 
TN : 138024 FP : 11327
FN : 29827 TP : 22525

Accuracy : 0.7959673381159428
Sensitivity : 43.026054400978
Specificity : 92.41585258886784
Precision : 0.6653964315254638
Recall : 0.43026054400978

4.2. Same thing with 3000 epochs : 
Confusion matrix : 
TN : 133225 FP : 16126
FN : 25104 TP : 27248

Accuracy : 0.7955905464965816
Sensitivity : 52.04767726161369
Specificity : 89.20261665472611
Precision : 0.6282104486558768
Recall : 0.5204767726161369

4.3. Same thing with 90 filters : 
Confusion matrix : 
TN : 113502 FP : 35849
FN : 26531 TP : 25821

Accuracy : 0.6907334050559486
Sensitivity : 49.321897921760396
Specificity : 75.99681287704803
Precision : 0.4186962866872061
Recall : 0.49321897921760394

4.3. Same thing with kernel size 4 and Maxpooling of 1 (basically no maxpooling)
Confusion matrix : 
TN : 128396 FP : 20955
FN : 23976 TP : 28376

Accuracy : 0.7772417861905871
Sensitivity : 54.20232273838631
Specificity : 85.96929381122322
Precision : 0.5752163953700513
Recall : 0.5420232273838631

4.4. 50 filters, filter size 3, maxpooling=2, 3000epochs
Confusion matrix : 
TN : 124795 FP : 24556
FN : 21478 TP : 30874

Accuracy : 0.7717733499253854
Sensitivity : 58.97386919315404
Specificity : 83.55819512423753
Precision : 0.556990799206206
Recall : 0.5897386919315404

4.5. 50 filters, filter size 3, maxpooling=2 (gets the best element from the filter), 500 epochs : 
Confusion matrix : 
TN : 129117 FP : 20234
FN : 22696 TP : 29656

Accuracy : 0.7871623129056088
Sensitivity : 56.64731051344744
Specificity : 86.45204919953666
Precision : 0.5944277410302666
Recall : 0.5664731051344744


RESULTS WITH ALL TRIALS : 

4.6. 50 filters, filter size 3, maxpooling=2 (gets the best element from the filter), 100 epochs : 
Confusion matrix : 
TN : 537357 FP : 5158
FN : 44582 TP : 7770

Accuracy : 0.9163846708592005
Sensitivity : 14.841839853300733
Specificity : 99.04924287807711
Precision : 0.6010210396039604
Recall : 0.14841839853300734

4.6. 50 filters, filter size 3, maxpooling=2 (gets the best element from the filter), 500 epochs : 

Confusion matrix : 
TN : 528683 FP : 13832
FN : 38292 TP : 14060

Accuracy : 0.9123770523495168
Sensitivity : 26.85666259168704
Specificity : 97.45039307668912
Precision : 0.5040871934604905
Recall : 0.2685666259168704

4.7. Same thing with 10000 epochs : 
Confusion matrix : 
TN : 538105 FP : 4410
FN : 42600 TP : 9752

Accuracy : 0.9209739319881587
Sensitivity : 18.62775061124694
Specificity : 99.18711925015899
Precision : 0.6886033046179918
Recall : 0.18627750611246943









JUST FALLS : 

We'll use the above as our set up for the rest of the tests 
50 filters, filter size 3, maxpooling=2 (gets the best element from the filter), 500 epochs : 

4.1. Just waist acceleration
Confusion matrix : 
TN : 129117 FP : 20234
FN : 22696 TP : 29656

Accuracy : 0.7871623129056088
Sensitivity : 56.64731051344744
Specificity : 86.45204919953666
Precision : 0.5944277410302666
Recall : 0.5664731051344744

4.2. Waist, head, sternum accelerations :
Confusion matrix : 
TN : 105011 FP : 44340
FN : 13755 TP : 38597

Accuracy : 0.7119775114896655
Sensitivity : 73.72593215158925
Specificity : 70.31154796419173
Precision : 0.46537733460337366
Recall : 0.7372593215158925

4.3. Waist acc,vel,mag : 
Confusion matrix : 
TN : 132868 FP : 16483
FN : 23657 TP : 28695

Accuracy : 0.8009945315637348
Sensitivity : 54.811659535452314
Specificity : 88.9635824333282
Precision : 0.6351542786311922
Recall : 0.5481165953545232

4.4. Waist, thighs, acc : 
Confusion matrix : 
TN : 126149 FP : 23202
FN : 16805 TP : 35547

Accuracy : 0.8016539168976168
Sensitivity : 67.8999847188264
Specificity : 84.46478430007164
Precision : 0.605065618138181
Recall : 0.678999847188264

4.5. All body parts acc :
Confusion matrix : 
TN : 120845 FP : 28506
FN : 14375 TP : 37977

Accuracy : 0.7874052443444074
Sensitivity : 72.541641198044
Specificity : 80.91341872501691
Precision : 0.5712287351653806
Recall : 0.72541641198044
















